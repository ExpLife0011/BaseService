// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: define_pro.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "define_pro.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::EnumDescriptor* TEvent_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TPlayerFlagBit_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TErrorType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TAuthType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TGender_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_define_5fpro_2eproto() {
  protobuf_AddDesc_define_5fpro_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "define_pro.proto");
  GOOGLE_CHECK(file != NULL);
  TEvent_descriptor_ = file->enum_type(0);
  TPlayerFlagBit_descriptor_ = file->enum_type(1);
  TErrorType_descriptor_ = file->enum_type(2);
  TAuthType_descriptor_ = file->enum_type(3);
  TGender_descriptor_ = file->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_define_5fpro_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_define_5fpro_2eproto() {
}

void protobuf_AddDesc_define_5fpro_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020define_pro.proto*Q\n\006TEvent\022\020\n\014EventInv"
    "alid\020\000\022\021\n\rEventPlayerUp\020\002\022\022\n\016EventCostMo"
    "ney\020(\022\016\n\nEventLogin\020.*h\n\016TPlayerFlagBit\022"
    "\026\n\022PLAYER_FLAG_TEST_0\020\000\022\036\n\032PLAYER_FLAG_F"
    "IRST_CARD_ONE\020\001\022\036\n\032PLAYER_FLAG_FIRST_CAR"
    "D_TEN\020\002*\251\002\n\nTErrorType\022\020\n\014INVALID_TYPE\020\000"
    "\022\022\n\016ACCOUNT_LOGGED\020\001\022\017\n\013SERVER_FULL\020\002\022\023\n"
    "\017SERVER_NOT_OPEN\020\003\022\017\n\013TEXT_SUCESS\020\004\022\r\n\tT"
    "EXT_FAIL\020\005\022\r\n\tPWD_ERROR\020\006\022\030\n\024PLAYER_ONLI"
    "NE_TO_FES\020\007\022\021\n\rPLAYER_EXISTS\020\010\022\021\n\rPLAYER"
    "_RELOAD\020\t\022\n\n\006SUCESS\020\027\022\020\n\014NO_AUTH_TYPE\020\030\022"
    "\024\n\020CONFIG_NOT_FOUND\020!\022\024\n\020NOT_ENOUGH_MONE"
    "Y\020%\022\026\n\021PLAYER_BASE_ERROR\020\200\001*C\n\tTAuthType"
    "\022\020\n\014AUTH_TYPE_MY\020\001\022\021\n\rAUTH_TYPE_BBS\020\002\022\021\n"
    "\rAUTH_TYPE_360\020\003*\037\n\007TGender\022\010\n\004MALE\020\001\022\n\n"
    "\006FEMALE\020\002", 609);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "define_pro.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_define_5fpro_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_define_5fpro_2eproto {
  StaticDescriptorInitializer_define_5fpro_2eproto() {
    protobuf_AddDesc_define_5fpro_2eproto();
  }
} static_descriptor_initializer_define_5fpro_2eproto_;
const ::google::protobuf::EnumDescriptor* TEvent_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TEvent_descriptor_;
}
bool TEvent_IsValid(int value) {
  switch(value) {
    case 0:
    case 2:
    case 40:
    case 46:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TPlayerFlagBit_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TPlayerFlagBit_descriptor_;
}
bool TPlayerFlagBit_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TErrorType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TErrorType_descriptor_;
}
bool TErrorType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 23:
    case 24:
    case 33:
    case 37:
    case 128:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TAuthType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TAuthType_descriptor_;
}
bool TAuthType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TGender_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TGender_descriptor_;
}
bool TGender_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
