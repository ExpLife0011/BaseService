// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: define_sys.proto

#ifndef PROTOBUF_define_5fsys_2eproto__INCLUDED
#define PROTOBUF_define_5fsys_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_define_5fsys_2eproto();
void protobuf_AssignDesc_define_5fsys_2eproto();
void protobuf_ShutdownFile_define_5fsys_2eproto();

class MsgSession;

enum TUdpControlFlag {
  PROTO_CMD = 1,
  PROTO_NEED_ACK = 128
};
bool TUdpControlFlag_IsValid(int value);
const TUdpControlFlag TUdpControlFlag_MIN = PROTO_CMD;
const TUdpControlFlag TUdpControlFlag_MAX = PROTO_NEED_ACK;
const int TUdpControlFlag_ARRAYSIZE = TUdpControlFlag_MAX + 1;

const ::google::protobuf::EnumDescriptor* TUdpControlFlag_descriptor();
inline const ::std::string& TUdpControlFlag_Name(TUdpControlFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    TUdpControlFlag_descriptor(), value);
}
inline bool TUdpControlFlag_Parse(
    const ::std::string& name, TUdpControlFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TUdpControlFlag>(
    TUdpControlFlag_descriptor(), name, value);
}
enum TUdpControlCmd {
  PROTO_CMD_ACK = 1,
  PROTO_CMD_HEARTBEAT = 2
};
bool TUdpControlCmd_IsValid(int value);
const TUdpControlCmd TUdpControlCmd_MIN = PROTO_CMD_ACK;
const TUdpControlCmd TUdpControlCmd_MAX = PROTO_CMD_HEARTBEAT;
const int TUdpControlCmd_ARRAYSIZE = TUdpControlCmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* TUdpControlCmd_descriptor();
inline const ::std::string& TUdpControlCmd_Name(TUdpControlCmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    TUdpControlCmd_descriptor(), value);
}
inline bool TUdpControlCmd_Parse(
    const ::std::string& name, TUdpControlCmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TUdpControlCmd>(
    TUdpControlCmd_descriptor(), name, value);
}
// ===================================================================

class MsgSession : public ::google::protobuf::Message {
 public:
  MsgSession();
  virtual ~MsgSession();

  MsgSession(const MsgSession& from);

  inline MsgSession& operator=(const MsgSession& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSession& default_instance();

  void Swap(MsgSession* other);

  // implements Message ----------------------------------------------

  MsgSession* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSession& from);
  void MergeFrom(const MsgSession& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 session = 1;
  inline bool has_session() const;
  inline void clear_session();
  static const int kSessionFieldNumber = 1;
  inline ::google::protobuf::uint64 session() const;
  inline void set_session(::google::protobuf::uint64 value);

  // optional fixed32 check = 2;
  inline bool has_check() const;
  inline void clear_check();
  static const int kCheckFieldNumber = 2;
  inline ::google::protobuf::uint32 check() const;
  inline void set_check(::google::protobuf::uint32 value);

  // optional uint32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgSession)
 private:
  inline void set_has_session();
  inline void clear_has_session();
  inline void set_has_check();
  inline void clear_has_check();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 session_;
  ::google::protobuf::uint32 check_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_define_5fsys_2eproto();
  friend void protobuf_AssignDesc_define_5fsys_2eproto();
  friend void protobuf_ShutdownFile_define_5fsys_2eproto();

  void InitAsDefaultInstance();
  static MsgSession* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgSession

// optional fixed64 session = 1;
inline bool MsgSession::has_session() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSession::set_has_session() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSession::clear_has_session() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSession::clear_session() {
  session_ = GOOGLE_ULONGLONG(0);
  clear_has_session();
}
inline ::google::protobuf::uint64 MsgSession::session() const {
  // @@protoc_insertion_point(field_get:MsgSession.session)
  return session_;
}
inline void MsgSession::set_session(::google::protobuf::uint64 value) {
  set_has_session();
  session_ = value;
  // @@protoc_insertion_point(field_set:MsgSession.session)
}

// optional fixed32 check = 2;
inline bool MsgSession::has_check() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgSession::set_has_check() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgSession::clear_has_check() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgSession::clear_check() {
  check_ = 0u;
  clear_has_check();
}
inline ::google::protobuf::uint32 MsgSession::check() const {
  // @@protoc_insertion_point(field_get:MsgSession.check)
  return check_;
}
inline void MsgSession::set_check(::google::protobuf::uint32 value) {
  set_has_check();
  check_ = value;
  // @@protoc_insertion_point(field_set:MsgSession.check)
}

// optional uint32 index = 3;
inline bool MsgSession::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgSession::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgSession::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgSession::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 MsgSession::index() const {
  // @@protoc_insertion_point(field_get:MsgSession.index)
  return index_;
}
inline void MsgSession::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:MsgSession.index)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::TUdpControlFlag> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TUdpControlFlag>() {
  return ::TUdpControlFlag_descriptor();
}
template <> struct is_proto_enum< ::TUdpControlCmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TUdpControlCmd>() {
  return ::TUdpControlCmd_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_define_5fsys_2eproto__INCLUDED
