FILE(GLOB SRC *.cpp *.cc)
FILE(GLOB PRIV_H *.h)
#FILE(GLOB SRC_TINY_XML tinyxml/*.h tinyxml/*.cpp)
FILE(GLOB SRC_STATIC_TABLE static_table/*.h static_table/*.cpp)
FILE(GLOB SRC_PROTO_MSG proto_msg/*.h proto_msg/*.cc)

#SOURCE_GROUP("tinyxml" FILES ${SRC_TINY_XML})
SOURCE_GROUP("static_table" FILES ${SRC_STATIC_TABLE})
SOURCE_GROUP("proto_msg" FILES ${SRC_PROTO_MSG})
SOURCE_GROUP(headers FILES ${PRIV_H})


# Filter out the source files not actually compiled.
#LIST(REMOVE_ITEM SRC ${CMAKE_CURRENT_SOURCE_DIR}/enum_template.cpp)
#LIST(REMOVE_ITEM PRIV_H ${CMAKE_CURRENT_SOURCE_DIR}/enum_template.h)

NL_TARGET_LIB(gameshare ${PRIV_H} ${SRC} ${SRC_STATIC_TABLE} ${SRC_PROTO_MSG} ${SRC_MESSAGE_STRUCT_S2C} )

INCLUDE_DIRECTORIES(${NEL_INCLUDE_DIR} ${CMAKE_CURRENT_SOURCE_DIR} ${PROTOBUF_INCLUDE_DIR})

TARGET_LINK_LIBRARIES(gameshare nelmisc nelnet)
NL_DEFAULT_PROPS(gameshare "MT, Library: Game Share")
NL_ADD_RUNTIME_FLAGS(gameshare)
NL_ADD_LIB_SUFFIX(gameshare)

#ADD_DEFINITIONS(${LIBXML2_DEFINITIONS})

IF(WITH_PCH)
  ADD_NATIVE_PRECOMPILED_HEADER(gameshare ${CMAKE_CURRENT_SOURCE_DIR}/stdpch.h ${CMAKE_CURRENT_SOURCE_DIR}/stdpch.cpp)
ENDIF(WITH_PCH)

NL_GEN_PC(game-share.pc)

IF((WITH_INSTALL_LIBRARIES AND WITH_STATIC) OR NOT WITH_STATIC)
  INSTALL(TARGETS gameshare LIBRARY DESTINATION lib ARCHIVE DESTINATION lib COMPONENT libraries)
ENDIF((WITH_INSTALL_LIBRARIES AND WITH_STATIC) OR NOT WITH_STATIC)
