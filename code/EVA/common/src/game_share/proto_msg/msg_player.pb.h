// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_player.proto

#ifndef PROTOBUF_msg_5fplayer_2eproto__INCLUDED
#define PROTOBUF_msg_5fplayer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "define_pro.pb.h"
#include "define_attrib.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_5fplayer_2eproto();
void protobuf_AssignDesc_msg_5fplayer_2eproto();
void protobuf_ShutdownFile_msg_5fplayer_2eproto();

class MsgPlayerInfo;

// ===================================================================

class MsgPlayerInfo : public ::google::protobuf::Message {
 public:
  MsgPlayerInfo();
  virtual ~MsgPlayerInfo();

  MsgPlayerInfo(const MsgPlayerInfo& from);

  inline MsgPlayerInfo& operator=(const MsgPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerInfo& default_instance();

  void Swap(MsgPlayerInfo* other);

  // implements Message ----------------------------------------------

  MsgPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerInfo& from);
  void MergeFrom(const MsgPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::uint64 pid() const;
  inline void set_pid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional .TGender sex = 3;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 3;
  inline ::TGender sex() const;
  inline void set_sex(::TGender value);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional uint32 pve_dup_id = 6;
  inline bool has_pve_dup_id() const;
  inline void clear_pve_dup_id();
  static const int kPveDupIdFieldNumber = 6;
  inline ::google::protobuf::uint32 pve_dup_id() const;
  inline void set_pve_dup_id(::google::protobuf::uint32 value);

  // optional sint64 money = 7;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 7;
  inline ::google::protobuf::int64 money() const;
  inline void set_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPlayerInfo)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_pve_dup_id();
  inline void clear_has_pve_dup_id();
  inline void set_has_money();
  inline void clear_has_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 pid_;
  ::std::string* name_;
  int sex_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 pve_dup_id_;
  ::google::protobuf::int64 money_;
  friend void  protobuf_AddDesc_msg_5fplayer_2eproto();
  friend void protobuf_AssignDesc_msg_5fplayer_2eproto();
  friend void protobuf_ShutdownFile_msg_5fplayer_2eproto();

  void InitAsDefaultInstance();
  static MsgPlayerInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgPlayerInfo

// optional uint64 pid = 1;
inline bool MsgPlayerInfo::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlayerInfo::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlayerInfo::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlayerInfo::clear_pid() {
  pid_ = GOOGLE_ULONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::uint64 MsgPlayerInfo::pid() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.pid)
  return pid_;
}
inline void MsgPlayerInfo::set_pid(::google::protobuf::uint64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.pid)
}

// optional string name = 2;
inline bool MsgPlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlayerInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MsgPlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.name)
  return *name_;
}
inline void MsgPlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.name)
}
inline void MsgPlayerInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPlayerInfo.name)
}
inline void MsgPlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerInfo.name)
}
inline ::std::string* MsgPlayerInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPlayerInfo.name)
  return name_;
}
inline ::std::string* MsgPlayerInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgPlayerInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerInfo.name)
}

// optional .TGender sex = 3;
inline bool MsgPlayerInfo::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlayerInfo::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlayerInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlayerInfo::clear_sex() {
  sex_ = 1;
  clear_has_sex();
}
inline ::TGender MsgPlayerInfo::sex() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.sex)
  return static_cast< ::TGender >(sex_);
}
inline void MsgPlayerInfo::set_sex(::TGender value) {
  assert(::TGender_IsValid(value));
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.sex)
}

// optional uint32 level = 4;
inline bool MsgPlayerInfo::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlayerInfo::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlayerInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlayerInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 MsgPlayerInfo::level() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.level)
  return level_;
}
inline void MsgPlayerInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.level)
}

// optional uint32 exp = 5;
inline bool MsgPlayerInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlayerInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlayerInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlayerInfo::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 MsgPlayerInfo::exp() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.exp)
  return exp_;
}
inline void MsgPlayerInfo::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.exp)
}

// optional uint32 pve_dup_id = 6;
inline bool MsgPlayerInfo::has_pve_dup_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPlayerInfo::set_has_pve_dup_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPlayerInfo::clear_has_pve_dup_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPlayerInfo::clear_pve_dup_id() {
  pve_dup_id_ = 0u;
  clear_has_pve_dup_id();
}
inline ::google::protobuf::uint32 MsgPlayerInfo::pve_dup_id() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.pve_dup_id)
  return pve_dup_id_;
}
inline void MsgPlayerInfo::set_pve_dup_id(::google::protobuf::uint32 value) {
  set_has_pve_dup_id();
  pve_dup_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.pve_dup_id)
}

// optional sint64 money = 7;
inline bool MsgPlayerInfo::has_money() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPlayerInfo::set_has_money() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPlayerInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPlayerInfo::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 MsgPlayerInfo::money() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.money)
  return money_;
}
inline void MsgPlayerInfo::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.money)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fplayer_2eproto__INCLUDED
