// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: define_attrib.proto

#ifndef PROTOBUF_define_5fattrib_2eproto__INCLUDED
#define PROTOBUF_define_5fattrib_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace ATTRIB_TYPE {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_define_5fattrib_2eproto();
void protobuf_AssignDesc_define_5fattrib_2eproto();
void protobuf_ShutdownFile_define_5fattrib_2eproto();


enum TAttribType {
  INVALID_VAL = -1,
  INVALID = 0,
  ID = 2001001,
  LEVEL_UP_EXP_INT = 2001002,
  NAME_STRING = 2001003,
  LIFE_INT = 2001004,
  LIFE_CURR_INT = 2001005
};
bool TAttribType_IsValid(int value);
const TAttribType TAttribType_MIN = INVALID_VAL;
const TAttribType TAttribType_MAX = LIFE_CURR_INT;
const int TAttribType_ARRAYSIZE = TAttribType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TAttribType_descriptor();
inline const ::std::string& TAttribType_Name(TAttribType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TAttribType_descriptor(), value);
}
inline bool TAttribType_Parse(
    const ::std::string& name, TAttribType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TAttribType>(
    TAttribType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace ATTRIB_TYPE

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ATTRIB_TYPE::TAttribType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ATTRIB_TYPE::TAttribType>() {
  return ::ATTRIB_TYPE::TAttribType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_define_5fattrib_2eproto__INCLUDED
